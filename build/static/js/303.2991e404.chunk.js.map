{"version":3,"file":"static/js/303.2991e404.chunk.js","mappings":"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","sources":["components/profile/ProfilePost.jsx","hooks/comments.js"],"sourcesContent":["import React, { lazy, useState } from \"react\";\nimport { IoMdHeartEmpty, IoMdHeart } from \"react-icons/io\";\nimport { MdOutlineModeComment } from \"react-icons/md\";\nimport { useToggleLike } from \"../../hooks/posts\";\nimport { useComments } from \"../../hooks/comments\";\nconst CommentsMenu = lazy(() => import(\"../comments/CommentsMenu\"));\n\nconst ProfilePost = ({ post, user }) => {\n  // Post's State\n  const [clickedPost, setClickedPost] = useState(false);\n\n  // Like Functionallity\n  const isLiked = post.likes.includes(user?.id);\n  const { toggleLike } = useToggleLike({\n    id: post.id,\n    isLiked,\n    uid: user?.id,\n  });\n\n  // Comments Menu & Functionallity\n  const { comments } = useComments(post.id);\n  const [commentsMenu, setCommentsMenu] = useState(false);\n\n  return (\n    <>\n      <div\n        className={`${\n          clickedPost\n            ? \"w-full h-full\"\n            : \"w-full xxxs:w-[48%] xxs:w-[30%] h-48 xxxs:h-40 xxs:h-44\"\n        } rounded-xl flex flex-col gap-2 duration-300 ease-in-out`}\n      >\n        {/* Picture */}\n        {clickedPost ? (\n          <img\n            src={post.picture}\n            title=\"Close Post\"\n            onClick={() => setClickedPost(!clickedPost)}\n            alt=\"\"\n            className=\"w-full h-full object-cover cursor-pointer rounded-xl hover:opacity-80 duration-300 ease-in-out\"\n          />\n        ) : (\n          <img\n            src={post.picture}\n            title=\"Open Post\"\n            onClick={() => setClickedPost(!clickedPost)}\n            alt=\"\"\n            className=\"w-full h-full object-cover cursor-pointer rounded-xl hover:opacity-80 duration-300 ease-in-out\"\n          />\n        )}\n\n        {clickedPost ? (\n          <div className=\"flex flex-col gap-2\">\n            {/* Caption */}\n            <div className=\"font-medium h-auto\">{post.text}</div>\n\n            {/* Like & Comments */}\n            <div className=\"flex justify-start items-center gap-4\">\n              {/* Lke */}\n              {user ? (\n                <>\n                  {isLiked ? (\n                    <div\n                      title=\"Unlike\"\n                      onClick={toggleLike}\n                      className=\"flex justify-center items-center gap-2 cursor-pointer text-orange-600 hover:opacity-50 duration-300 ease-in-out\"\n                    >\n                      <IoMdHeart size={26} />\n                      <div className=\"font-medium\">{post.likes.length}</div>\n                    </div>\n                  ) : (\n                    <div\n                      title=\"Like\"\n                      onClick={toggleLike}\n                      className=\"flex justify-center items-center gap-2 cursor-pointer hover:text-orange-600 duration-300 ease-in-out\"\n                    >\n                      <IoMdHeartEmpty size={26} />\n                      <div className=\"font-medium\">{post.likes.length}</div>\n                    </div>\n                  )}\n                </>\n              ) : (\n                <div\n                  title=\"Like\"\n                  onClick={() => alert(\"Please sign in to be able to like\")}\n                  className=\"flex justify-center items-center gap-2 cursor-pointer hover:text-orange-600 duration-300 ease-in-out\"\n                >\n                  <IoMdHeartEmpty size={26} />\n                  <div className=\"font-medium\">{post.likes.length}</div>\n                </div>\n              )}\n\n              {/* Comments */}\n              {user ? (\n                <div\n                  title=\"Comments\"\n                  onClick={() => setCommentsMenu(true)}\n                  className=\"flex justify-center items-center gap-2 cursor-pointer hover:text-orange-600 duration-300 ease-in-out\"\n                >\n                  <MdOutlineModeComment size={22} />\n                  <div className=\"font-medium\">{comments?.length}</div>\n                </div>\n              ) : (\n                <div\n                  title=\"Comments\"\n                  onClick={() => alert(\"Please sign in to be able to comment\")}\n                  className=\"flex justify-center items-center gap-2 cursor-pointer hover:text-orange-600 duration-300 ease-in-out\"\n                >\n                  <MdOutlineModeComment size={22} />\n                  <div className=\"font-medium\">{comments?.length}</div>\n                </div>\n              )}\n            </div>\n          </div>\n        ) : null}\n      </div>\n\n      {/* Comments Menu */}\n      <CommentsMenu\n        post={post}\n        commentsMenu={commentsMenu}\n        setCommentsMenu={setCommentsMenu}\n      />\n    </>\n  );\n};\n\nexport default ProfilePost;\n","import { useState } from \"react\";\nimport { db } from \"../firebase\";\nimport {\n  collection,\n  deleteDoc,\n  doc,\n  orderBy,\n  query,\n  setDoc,\n  where,\n} from \"firebase/firestore\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\nimport { uuidv4 } from \"@firebase/util\";\n\nexport function useAddComment({ postID, uid }) {\n  const [isLoading, setLoading] = useState(false);\n\n  async function addComment(text) {\n    setLoading(true);\n    const id = uuidv4();\n    const date = Date.now();\n    const docRef = doc(db, \"comments\", id);\n    await setDoc(docRef, { text, id, postID, date, uid });\n    setLoading(false);\n  }\n\n  return { addComment, isLoading };\n}\n\nexport function useComments(postID) {\n  const q = query(\n    collection(db, \"comments\"),\n    where(\"postID\", \"==\", postID),\n    orderBy(\"date\", \"desc\")\n  );\n  const [comments, isLoading, error] = useCollectionData(q);\n  if (error) throw error;\n  return { comments, isLoading };\n}\n\nexport function useDeleteComment(id) {\n  const [isLoading, setLoading] = useState(false);\n\n  async function deleteComment() {\n    const res = window.confirm(\"Are you sure you want to delete this comment?\");\n    if (res) {\n      setLoading(true);\n      const docRef = doc(db, \"comments\", id);\n      await deleteDoc(docRef);\n      setLoading(false);\n    }\n  }\n\n  return { deleteComment, isLoading };\n}\n"],"names":["CommentsMenu","lazy","_ref","post","user","_useState","useState","_useState2","_slicedToArray","clickedPost","setClickedPost","isLiked","likes","includes","id","toggleLike","useToggleLike","uid","comments","useComments","_useState3","_useState4","commentsMenu","setCommentsMenu","_jsxs","_Fragment","children","className","concat","_jsx","src","picture","title","onClick","alt","text","IoMdHeart","size","length","IoMdHeartEmpty","alert","MdOutlineModeComment","useAddComment","postID","isLoading","setLoading","_addComment","_asyncToGenerator","_regeneratorRuntime","mark","_callee","date","docRef","wrap","_context","prev","next","uuidv4","Date","now","doc","db","setDoc","stop","apply","arguments","addComment","_x","q","query","collection","where","orderBy","_useCollectionData","useCollectionData","_useCollectionData2","error","useDeleteComment","_deleteComment","_callee2","_context2","window","confirm","deleteDoc","deleteComment"],"sourceRoot":""}