{"version":3,"file":"static/js/333.bec35932.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.15.1\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.15.1\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.15.1 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","isRefObject","ref","hasOwnProperty","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","concat","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","PresenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","useIsomorphicLayoutEffect","render","useEffect","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","LayoutGroupContext","id","createMotionProxy","createConfig","custom","arguments","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","transformName","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","_classCallCheck","this","isMounted","_createClass","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","frame","HoverGesture","_Feature","_inherits","_super","_createSuper","apply","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_slicedToArray","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","invariant","_definition","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","_defineProperty","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","_info$values","tokenised","push","_toConsumableArray","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","warning","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","timestamp","stop","cancelFrame","now","frameData","isProcessing","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","cancel","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","_transition$elapsed","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","add","addUniqueItem","item","removeItem","index","SubscriptionManager","subscriptions","numSubscriptions","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","read","getSize","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","remove","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","_ref3","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","steps","process","preRender","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","splitCSSVariableRegex","maxDepth","getVariableValue","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","fallback","getPropertyValue","resolveCSSVariables","obj","TypeError","_objectDestructuringEmpty","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","unitConversion","hasPositionalKey","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","valueFromInitial","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","_get","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig"],"sourceRoot":""}